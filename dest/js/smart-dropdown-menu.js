!function e(t,n,r){function i(u,s){if(!n[u]){if(!t[u]){var a="function"==typeof require&&require;if(!s&&a)return a(u,!0);if(o)return o(u,!0);var l=new Error("Cannot find module '"+u+"'");throw l.code="MODULE_NOT_FOUND",l}var c=n[u]={exports:{}};t[u][0].call(c.exports,function(e){var n=t[u][1][e];return i(n?n:e)},c,c.exports,e,t,n,r)}return n[u].exports}for(var o="function"==typeof require&&require,u=0;u<r.length;u++)i(r[u]);return i}({1:[function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}var i=e("./smart-dropdown-menu"),o=r(i);window.SmartDropdownMenu=o["default"]},{"./smart-dropdown-menu":3}],2:[function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(){function e(t,n){r(this,e),this.el=t,this.index=n,this.el.classList.add("item"+this.index),this.el.addEventListener("mouseover",this.openSubmenu.bind(this)),this.el.addEventListener("mouseout",this.closeSubmenu.bind(this))}return i(e,[{key:"openSubmenu",value:function(){this.el.classList.add("show")}},{key:"closeSubmenu",value:function(){this.el.classList.remove("show")}}]),e}();n["default"]=o},{}],3:[function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=e("./smart-dropdown-menu-item"),s=r(u),a=function(){function e(t){i(this,e),this.el=t,this.items=[];for(var n=this.el.querySelectorAll(".menu-list > .menu-item"),r=0;r<n.length;r++)this.items.push(new s["default"](n[r],r));this.el.addEventListener("mouseover",this.showMenu.bind(this)),this.el.addEventListener("mouseout",this.hideMenu.bind(this)),this.showMenu(),this.appendTriareaStyle(),this.hideMenu()}return o(e,[{key:"showMenu",value:function(e){this.el.classList.add("show")}},{key:"hideMenu",value:function(e){this.el.classList.remove("show")}},{key:"appendTriareaStyle",value:function(){var e=document.getElementById("smart-dropdown-menu-style");e||(e=document.createElement("style"),e.type="text/css",e.id="smart-dropdown-menu-style",document.querySelector("head").appendChild(e));var t=this.calculateTriarea();e.innerHTML=this.objectToStyle(t)}},{key:"calculateTriarea",value:function(){for(var e=this.el.querySelector(".menu-item"),t=e.offsetWidth,n=e.offsetHeight,r={},i=0;i<this.items.length;i++){this.items[i].openSubmenu();var o=Math.floor(180*Math.atan2(.5*t,n*i+n/2)/Math.PI);r[".item"+i+":before"]={height:n*i+n/2+"px",transform:"skewX(-"+o+"deg)"};var u=this.items[i].el.querySelector(".submenu-list").offsetHeight,s=u-n/2-n*i,a=Math.floor(180*Math.atan2(.5*t,s)/Math.PI);r[".item"+i+":after"]={"margin-top":"-"+n/2+"px",height:s+"px",transform:"skewX("+a+"deg)"},this.items[i].closeSubmenu()}return r}},{key:"objectToStyle",value:function(e){var t="";return Object.keys(e).forEach(function(n){t+=n+"{",Object.keys(e[n]).forEach(function(r){t+=r+": "+e[n][r]+";"}),t+="}"}),t}}]),e}();n["default"]=a},{"./smart-dropdown-menu-item":2}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,
