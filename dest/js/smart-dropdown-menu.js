!function e(t,n,i){function r(o,s){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!s&&a)return a(o,!0);if(u)return u(o,!0);var l=new Error("Cannot find module '"+o+"'");throw l.code="MODULE_NOT_FOUND",l}var c=n[o]={exports:{}};t[o][0].call(c.exports,function(e){var n=t[o][1][e];return r(n?n:e)},c,c.exports,e,t,n,i)}return n[o].exports}for(var u="function"==typeof require&&require,o=0;o<i.length;o++)r(i[o]);return r}({1:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}var r=e("./smartmenu"),u=i(r);window.SmartMenu=u["default"]},{"./smartmenu":2}],2:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var u=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),o=e("./smartmenuitem"),s=i(o),a=function(){function e(t){r(this,e),this.el=t,this.items=[];for(var n=this.el.querySelectorAll(".menu-list > .menu-item"),i=0;i<n.length;i++)this.items.push(new s["default"](n[i],i));this.el.addEventListener("mouseover",this.showMenu.bind(this)),this.el.addEventListener("mouseout",this.hideMenu.bind(this)),this.showMenu(),this.triarea(),this.hideMenu()}return u(e,[{key:"showMenu",value:function(e){this.el.classList.add("show")}},{key:"hideMenu",value:function(e){this.el.classList.remove("show")}},{key:"triarea",value:function(){var e=document.getElementById("category-menu-style");e||(e=document.createElement("style"),e.type="text/css",e.id="category-menu-style",document.querySelector("head").appendChild(e));for(var t=this.el.querySelector(".menu-item"),n=t.offsetWidth,i=t.offsetHeight,r={},u=0;u<this.items.length;u++){this.items[u].openSubmenu();var o=Math.floor(180*Math.atan2(.5*n,i*u+i/2)/Math.PI);r[".item"+u+":before"]={height:i*u+i/2+"px",transform:"skewX(-"+o+"deg)"};var s=this.items[u].el.querySelector(".submenu-list").offsetHeight,a=s-i/2-i*u,l=Math.floor(180*Math.atan2(.5*n,a)/Math.PI);r[".item"+u+":after"]={"margin-top":"-"+i/2+"px",height:a+"px",transform:"skewX("+l+"deg)"},this.items[u].closeSubmenu()}e.innerHTML=this.objectToStyle(r)}},{key:"objectToStyle",value:function(e){var t="";return Object.keys(e).forEach(function(n){t+=n+"{",Object.keys(e[n]).forEach(function(i){t+=i+": "+e[n][i]+";"}),t+="}"}),t}}]),e}();n["default"]=a},{"./smartmenuitem":3}],3:[function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),u=function(){function e(t,n){i(this,e),this.el=t,this.index=n,this.el.classList.add("item"+this.index),this.el.addEventListener("mouseover",this.openSubmenu.bind(this)),this.el.addEventListener("mouseout",this.closeSubmenu.bind(this))}return r(e,[{key:"openSubmenu",value:function(){this.el.classList.add("show")}},{key:"closeSubmenu",value:function(){this.el.classList.remove("show")}}]),e}();n["default"]=u},{}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,
